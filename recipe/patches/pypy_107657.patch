# HG changeset patch
# User Matti Picus <matti.picus@gmailc.om>
# Date 1689757045 -7200
#      Wed Jul 19 10:57:25 2023 +0200
# Branch conda-3.9-v7.3.12
# Node ID 8e51bb8ff5066cfcc145c74aaaaf012c39dbc510
# Parent  98f0ac5929217a22f7c911160b7c21ec18ee6ed2
on macos sendifle can return an error while sending part of the file (issue 3964)

diff -r 98f0ac592921 -r 8e51bb8ff506 rpython/rlib/rposix.py
--- a/rpython/rlib/rposix.py	Sat Aug 12 23:45:48 2023 +0300
+++ b/rpython/rlib/rposix.py	Wed Jul 19 10:57:25 2023 +0200
@@ -3039,11 +3039,12 @@
         with lltype.scoped_alloc(_OFF_PTR_T.TO, 1) as p_len:
             p_len[0] = rffi.cast(OFF_T, count)
             res = c_sendfile(in_fd, out_fd, offset, p_len, lltype.nullptr(rffi.VOIDP.TO), 0)
+            sbytes = p_len[0]
             if res != 0:
+                if get_saved_errno() in (errno.EAGAIN, errno.EBUSY) and sbytes != 0:
+                    return sbytes
                 return handle_posix_error('sendfile', res)
-            res = p_len[0]
-        return res
-
+            return sbytes
 
 # ____________________________________________________________
 # Support for *xattr functions
diff -r 98f0ac592921 -r 8e51bb8ff506 rpython/rlib/test/test_rposix.py
--- a/rpython/rlib/test/test_rposix.py	Sat Aug 12 23:45:48 2023 +0300
+++ b/rpython/rlib/test/test_rposix.py	Wed Jul 19 10:57:25 2023 +0200
@@ -736,6 +736,33 @@
         s2.close()
         s1.close()
 
+if sys.platform == "darwin":
+   def test_sendfile_partial(tmpdir):
+        # issue 3964
+        from rpython.rlib.rsocket import socketpair
+        wsock, rsock = socketpair()
+        wsock.setblocking(False)
+        rsock.setblocking(False)
+
+        recvd = 0
+        with open(str(tmpdir / "sendfile.txt"), "wb+") as file:
+            file.write(b"x" * 131072)
+            file.flush()
+            file.seek(0)
+
+            sent = rposix.sendfile(wsock.fd, file.fileno(),
+                               offset=0, count=131072)
+            assert sent > 0
+            try:
+                chunk = rsock.recv(1024)
+                while chunk:
+                    recvd += len(chunk)
+                    chunk = rsock.recv(1024)
+            except Exception as e:
+                pass
+        assert recvd  == sent
+
+
 @rposix_requires('pread')
 def test_pread():
     fname = str(udir.join('os_test.txt'))
