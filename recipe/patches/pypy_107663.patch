# HG changeset patch
# User Matti Picus <matti.picus@gmail.com>
# Date 1691910266 -10800
#      Sun Aug 13 10:04:26 2023 +0300
# Branch conda-3.8
# Node ID 342e6f68228fb912be4bcb609d55896ce043cb85
# Parent  c20fe3f310f1d209d69a71d903dd17e5c3cf0de9
hide functools.partial from the stack (issue 3988)

diff -r c20fe3f310f1 -r 342e6f68228f lib-python/3/functools.py
--- a/lib-python/3/functools.py	Sun Dec 04 10:41:06 2022 +0200
+++ b/lib-python/3/functools.py	Sun Aug 13 10:04:26 2023 +0300
@@ -19,6 +19,8 @@
 # import types, weakref  # Deferred to single_dispatch()
 from reprlib import recursive_repr
 from _thread import RLock
+try: from __pypy__ import hidden_applevel
+except ImportError: builtinify = lambda f: f
 
 
 ################################################################################
@@ -198,6 +200,7 @@
 ### cmp_to_key() function converter
 ################################################################################
 
+@hidden_applevel
 def cmp_to_key(mycmp):
     """Convert a cmp= function into a key= function"""
     class K(object):
@@ -229,6 +232,7 @@
 
 _initial_missing = object()
 
+@hidden_applevel
 def reduce(function, sequence, initial=_initial_missing):
     """
     reduce(function, sequence[, initial]) -> value
@@ -290,6 +294,7 @@
         self.keywords = keywords
         return self
 
+    @hidden_applevel
     def __call__(self, /, *args, **keywords):
         keywords = {**self.keywords, **keywords}
         return self.func(*self.args, *args, **keywords)
@@ -642,7 +647,7 @@
 
     wrapper.cache_info = cache_info
     wrapper.cache_clear = cache_clear
-    return wrapper
+    return hidden_applevel(wrapper)
 
 try:
     from _functools import _lru_cache_wrapper
